<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:project-oracle.xml"/>
        <spring:import resource="classpath:globals.xml"/>
        <spring:import resource="classpath:auth.xml"/>
        <spring:import resource="classpath:project-org-lookup.xml"/>
        <spring:import resource="classpath:error-handling.xml"/>
    </spring:beans>
    <munit:test name="project-oracle-tests-projectCreateFlowTest" description="Test">
        <mock:when messageProcessor="http:request" doc:name="Mock Auth">
            <mock:with-attributes>
                <mock:with-attribute name="config-ref" whereValue="oracle_Auth_HTTP_Request_Configuration"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('oracle-auth-response.xml').asString()]" mimeType="application/xml"/>
        </mock:when>
        <mock:when messageProcessor="http:request" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="config-ref" whereValue="oracleHttpRequestConfiguration"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('oracle-create-project-successful-response.json').asString()]" mimeType="application/json"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "CREATE_PROJECT_Input": {
    "RESTHeader": {
      "Responsibility": "XXISG_PA"
    },
    "InputParameters": {
      "P_PROJECT": {
        "SOURCE_SYSTEM": "XXSF",
        "SOURCE_PROJECT_NUMBER": "a27c0000005RQfpAAG",
        "PROJECT_NAME": "Test Project Aug 11",
        "DESCRIPTION": "Test Project Aug 11",
        "PROJECT_START_DATE": "2017-08-11",
        "OPERATING_UNIT_ID": "21",
        "PRODUCT_TYPE": "DATASITE-DOWNLOADONLY",
        "ORGANIZATION_ID": 1420,
        "BILLABLE": "Y"
      }
    }
  }
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="projectCreateFlow" doc:name="Flow-ref to projectCreateFlow"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <munit:assert-on-equals expectedValue="#['S']" actualValue="#[payload.status]" doc:name="Assert Equals"/>
    </munit:test>
</mule>
