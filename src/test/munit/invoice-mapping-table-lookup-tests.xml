<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mock="http://www.mulesoft.org/schema/mule/mock"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:core="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>

    <spring:beans>
        <spring:import resource="classpath:invoice-mapping-table-lookup.xml"/>
        <spring:import resource="classpath:globals.xml"/>
        <spring:import resource="classpath:auth.xml"/>
        <spring:import resource="classpath:error-handling.xml"/>
    </spring:beans>

    <munit:test name="invoiceMappingTableLookupTest" description="Test">
        <mock:when messageProcessor="http:request" doc:name="Mock Auth">
            <mock:with-attributes>
                <mock:with-attribute name="config-ref" whereValue="oracle_Auth_HTTP_Request_Configuration"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('oracle-auth-response.xml').asString()]" mimeType="application/xml"/>
        </mock:when>

        <mock:when messageProcessor="http:request" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="config-ref" whereValue="oracleHttpRequestConfiguration"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('oracle-invoice-mapping-result.json').asString()]" mimeType="application/json"/>
        </mock:when>

        <munit:set payload="{&quot;currency&quot;: &quot;EUR&quot;, &quot;legalEntity&quot;: &quot;010&quot;, &quot;operatingUnitId&quot;: &quot;21&quot;}" doc:name="Set Message" mimeType="application/json"/>

        <flow-ref name="invoiceMappingTableLookup" doc:name="invoiceMappingTableLookup"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>

    </munit:test>

</mule>
