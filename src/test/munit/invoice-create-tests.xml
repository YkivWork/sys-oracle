<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xmlns:mock="http://www.mulesoft.org/schema/mule/mock" 
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd">

    <munit:config name="munit" doc:name="MUnit configuration"/>

    <spring:beans>
        <spring:import resource="classpath:invoice-create.xml"/>
        <spring:import resource="classpath:globals.xml"/>
        <spring:import resource="classpath:auth.xml"/>
        <spring:import resource="classpath:error-handling.xml"/>
    </spring:beans>
    <munit:test name="invoice-create-tests" description="MUnit Test">
        <mock:when messageProcessor="http:request" doc:name="Mock Auth">
            <mock:with-attributes>
                <mock:with-attribute name="config-ref" whereValue="oracle_Auth_HTTP_Request_Configuration"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('oracle-auth-response.xml').asString()]" mimeType="application/xml"/>
        </mock:when>

        <mock:when messageProcessor="http:request" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="config-ref" whereValue="oracleHttpRequestConfiguration"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('invoice_create_E_response.json').asString()]" mimeType="application/json"/>
        </mock:when>

        <munit:set payload="#[getResource('create-invoice-model.json').asString()]" mimeType="application/json" doc:name="Set Message"/>

        <flow-ref name="invoiceCreate" doc:name="invoiceCreate"/>

        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>

        <munit:assert-on-equals expectedValue="#['E']" actualValue="#[flowVars.extractMsg]" doc:name="Assert Equals"/>
    </munit:test>
    
</mule>
