<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">


    <flow name="projectOrgLookup">
        <logger message="start projectOrgLookup Flow" level="INFO" doc:name="Logger"/>

        <flow-ref name="getAuth" doc:name="getAuth"/>

        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  GET_PROJ_ORG_MAPPING_Input: {
    RESTHeader: {
      RespApplication: "PA",
      SecurityGroup: "STANDARD",
      NLSLanguage: "AMERICAN"
    },
    InputParameters: {
      P_BUSINESS: "DATASITE"
    }
  }
}]]></dw:set-payload>
        </dw:transform-message>
        <ee:cache cachingStrategy-ref="ProjOrgExpirableCachingStrategy" doc:name="Cache">
            <logger message="system=Oracle method=ProjOrgLookup action=request payload=#[message.payloadAs(java.lang.String)]" level="INFO" category="com.merrillcorp.q2c" doc:name="Logger"/>
            <set-session-variable variableName="payloadBeforeUntilSuccess" value="#[payload]" doc:name="Session Variable"/>
            <until-successful maxRetries="${oracle.http.max.retries}" millisBetweenRetries="${oracle.http.milliSecondsBetweenRetries}" failureExpression="exception!=null &amp;&amp; (exception.causedBy(java.io.IOException) || exception.causedBy(java.net.ConnectException)  || exception.causedBy(java.net.SocketTimeoutException))" synchronous="true" doc:name="Until Successful">
                <http:request config-ref="oracleHttpRequestConfiguration" path="${oracle.projectMapping.path}" method="POST" doc:name="Get Project Org Mapping">
                    <http:request-builder>
                        <http:header headerName="Cookie" value="#[flowVars.oracleAuth.tokenName + '=' + flowVars.oracleAuth.accessToken]"/>
                    </http:request-builder>
                </http:request>
            </until-successful>
            <logger message="system=Oracle method=ProjOrgMapping action=response projectId=#[flowVars.projectId]" level="INFO" category="com.merrillcorp.q2c" doc:name="Logger"/>
        </ee:cache>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
            <dw:set-variable variableName="projectOrgId"><![CDATA[%dw 1.0
%output application/java
---
payload.OutputParameters.X_PROJECT_ORGS.X_PROJECT_ORGS_ITEM[?(
 $.BUSINESS_UNIT == (upper flowVars.theProject.businessUnit) and
 $.REVENUE_SITE == flowVars.theProject.revenueSite[0..2] and
 $.COUNTRY_OF_ISSUER  == flowVars.theProject.countryOfIssuer
)][0].PROJ_ORG_ID]]></dw:set-variable>
        </dw:transform-message>
        <logger message="end projectOrgLookup Flow" level="INFO" doc:name="Logger"/>

    </flow>

</mule>